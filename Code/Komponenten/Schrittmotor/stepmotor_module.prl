
MODULE(stepmotor);

SYSTEM;
   leftstepmotor_out: RPiDigitalOut(19, 4);
   rightstepmotor_out: RPiDigitalOut(23, 4);

PROBLEM;
    SPC leftstepmotor_out DATION OUT SYSTEM BASIC BIT(4) GLOBAL;
    DCL lmotor DATION OUT BASIC BIT(4) CREATED (leftstepmotor_out);
    SPC rightstepmotor_out DATION OUT SYSTEM BASIC BIT(4) GLOBAL;
    DCL rmotor DATION OUT BASIC BIT(4) CREATED (rightstepmotor_out);
    DCL (a, b) SEMA PRESET(1,1);

main: TASK MAIN;
  DCL stoptime DUR INIT (100 SEC);
  OPEN lmotor;
  OPEN rmotor;
  ACTIVATE  drivel;
  ACTIVATE driver;
  AFTER stoptime RESUME;
  TERMINATE drivel;
  TERMINATE driver;
  CLOSE rmotor;
  CLOSE lmotor;
END;

drivel: TASK;
	DCL time DUR INIT (0.02 SEC);
	REPEAT
		CALL step(0, 1, 1, time);
	END;
END;

driver: TASK;
	DCL time DUR INIT (0.01 SEC);
	REPEAT
		CALL step(1,1, 1, time);
	END;
END;

step: PROC(motorindex FIXED, steps FIXED, dir FIXED, time DUR);
  !DCL (a, b, c, d) BIT(4) INIT('1010'B1, '1001'B1, '5'B4, '0110'B1);
  DCL (a, b ) BIT(4) INIT('1010'B1, '1001'B1);
  DCL (c,d) BIT(4);
  c := '0101'B1;
  d := '0110'B1;

  IF motorindex == 0 THEN
    IF dir == 0 THEN
       TO steps REPEAT
         SEND a TO lmotor;
         AFTER time RESUME;

         SEND b TO lmotor;
         AFTER time RESUME;

         SEND c TO lmotor;
         AFTER time RESUME;

         SEND d TO lmotor;
         AFTER time RESUME;
       END;
    FIN;

    IF dir == 1 THEN
       TO steps REPEAT
         SEND d TO lmotor;
         AFTER time RESUME;

         SEND c TO lmotor;
         AFTER time RESUME;

         SEND b TO lmotor;
         AFTER time RESUME;

         SEND a TO lmotor;
         AFTER time RESUME;
       END;
    FIN;
  FIN;
  IF motorindex == 1 THEN
    IF dir == 0 THEN
       TO steps REPEAT
         SEND a TO rmotor;
         AFTER time RESUME;

         SEND b TO rmotor;
         AFTER time RESUME;

         SEND c TO rmotor;
         AFTER time RESUME;

         SEND d TO rmotor;
         AFTER time RESUME;
       END;
    FIN;

    IF dir == 1 THEN
       TO steps REPEAT
         SEND d TO rmotor;
         AFTER time RESUME;

         SEND c TO rmotor;
         AFTER time RESUME;

         SEND b TO rmotor;
         AFTER time RESUME;

         SEND a TO rmotor;
         AFTER time RESUME;
       END;
    FIN;
  FIN;

END;

MODEND;

